{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAO,SAASA,KAAKA,CAAA,EAAG;EACpBC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACxB;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA;;;;;;UCzCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAAA,EAAE;EACjBF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACpBF,uDAAK,CAAC,CAAC;AACT;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,I","sources":["webpack://inserir-agentes-sapios-chat/./public/teste-n.js","webpack://inserir-agentes-sapios-chat/webpack/bootstrap","webpack://inserir-agentes-sapios-chat/webpack/runtime/define property getters","webpack://inserir-agentes-sapios-chat/webpack/runtime/hasOwnProperty shorthand","webpack://inserir-agentes-sapios-chat/webpack/runtime/make namespace object","webpack://inserir-agentes-sapios-chat/./public/main.js"],"sourcesContent":["export function teste() {\r\n    console.log(\"teste\")\r\n//     try {\r\n//       const errorMessageElement = document.getElementById('error-message');\r\n//       const userDataDiv = document.getElementById(\"userData\");\r\n//       userDataDiv.innerHTML = `\r\n//       <div class=\"spinner-border\" role=\"status\">\r\n//           <span class=\"visually-hidden\">Loading...</span>\r\n//       </div><p>carregando</p>`;\r\n  \r\n//       const siteSelected = document.getElementById(\"statusFilter\").value;\r\n//       console.log(siteSelected)\r\n  \r\n//       const apiUrl = `http://localhost:3000/api/users?site=${encodeURIComponent(\r\n//         siteSelected\r\n//       )}`;\r\n  \r\n//       const headers = {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"X-Status-Filter\": siteSelected,\r\n//       };\r\n  \r\n//       const response = await fetch(apiUrl, {\r\n//         method: \"GET\",\r\n//         headers: headers,\r\n//       });\r\n  \r\n//       if (!response.ok) {\r\n//         throw new Error(`Erro na solicitação: ${response.status}`);\r\n//       }\r\n  \r\n//       const data = await response.json();\r\n//       createUserLine(data);\r\n//       userDataDiv.innerHTML = \"\";\r\n//       return data\r\n//     } catch (error) {\r\n//       console.error(\"Erro ao obter dados da API:\", error.message);\r\n//       const userDataDiv = document.getElementById(\"userData\");\r\n//       userDataDiv.innerHTML = \"\";\r\n//       errorApiMsg();\r\n//     }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import teste from \"./teste-n.js\";\r\n\r\n// async function loadData() {\r\n//   try {\r\n//     await teste();\r\n//   } catch (error) {\r\n//     console.error(\"Erro ao carregar dados:\", error.message);\r\n//   }\r\n// }\r\nfunction loadData(){\r\n  console.log(\"teste\")\r\n  teste()\r\n}\r\n\r\n\r\n// function errorApiMsg(){\r\n//   iziToast.error({\r\n//     title: 'Erro',\r\n//     message: 'Ocorreu um erro ao processar a ação!',\r\n//     position: 'topRight' // Posição onde a notificação será exibida\r\n//   });\r\n// } \r\n\r\n//  function sucessApiMsg(){\r\n//   iziToast.success({\r\n//     title: 'Sucesso',\r\n//     message: 'Usuario atutualizado com sucesso!',\r\n//     position: 'topRight' // Posição onde a notificação será exibida\r\n//   });\r\n// } \r\n\r\n// // async function loadData() {\r\n// //   try {\r\n// //     const errorMessageElement = document.getElementById('error-message');\r\n// //     const userDataDiv = document.getElementById(\"userData\");\r\n// //     userDataDiv.innerHTML = `\r\n// //     <div class=\"spinner-border\" role=\"status\">\r\n// //         <span class=\"visually-hidden\">Loading...</span>\r\n// //     </div><p>carregando</p>`;\r\n\r\n// //     const siteSelected = document.getElementById(\"statusFilter\").value;\r\n// //     console.log(siteSelected)\r\n\r\n// //     const apiUrl = `http://localhost:3000/api/users?site=${encodeURIComponent(\r\n// //       siteSelected\r\n// //     )}`;\r\n\r\n// //     const headers = {\r\n// //       \"Content-Type\": \"application/json\",\r\n// //       \"X-Status-Filter\": siteSelected,\r\n// //     };\r\n\r\n// //     const response = await fetch(apiUrl, {\r\n// //       method: \"GET\",\r\n// //       headers: headers,\r\n// //     });\r\n\r\n// //     if (!response.ok) {\r\n// //       throw new Error(`Erro na solicitação: ${response.status}`);\r\n// //     }\r\n\r\n// //     const data = await response.json();\r\n// //     createUserLine(data);\r\n// //     userDataDiv.innerHTML = \"\";\r\n// //     return data\r\n// //   } catch (error) {\r\n// //     console.error(\"Erro ao obter dados da API:\", error.message);\r\n// //     const userDataDiv = document.getElementById(\"userData\");\r\n// //     userDataDiv.innerHTML = \"\";\r\n// //     errorApiMsg();\r\n// //   }\r\n  \r\n// // }\r\n\r\n// async function rolesList() {\r\n//   try {\r\n//     const errorMessageElement = document.getElementById('error-message');\r\n//     const siteSelected = document.getElementById(\"statusFilter\").value;\r\n//     console.log(siteSelected)\r\n\r\n//     const apiUrl = `http://localhost:3000/api/rolesList?site=${encodeURIComponent(\r\n//       siteSelected\r\n//     )}`;\r\n\r\n//     const headers = {\r\n//       \"Content-Type\": \"application/json\",\r\n//       \"X-Status-Filter\": siteSelected,\r\n//     };\r\n\r\n//     const response = await fetch(apiUrl, {\r\n//       method: \"GET\",\r\n//       headers: headers,\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       throw new Error(`Erro na solicitação: ${response.status}`);\r\n//     }\r\n\r\n//     let data = await response.json();\r\n//     data = data.allRoles\r\n//     console.log(data)\r\n\r\n//     roles = []\r\n//     for(let id of data){\r\n//       roles.push(id._id)\r\n//     }\r\n\r\n//     console.log(roles)\r\n    \r\n    \r\n//   } catch (error) {\r\n//     console.error(\"Erro ao obter dados da API:\", error.message);\r\n//     errorApiMsg();\r\n//   }\r\n//   return roles\r\n// }\r\n\r\n// function createUserLine(data) {\r\n//   try {\r\n//     const userDataDiv = document.getElementById(\"userData\");\r\n\r\n//     // Limpar elementos com a classe \"userInfo\"\r\n//     const userInfoElements = document.querySelectorAll(\".userInfo\");\r\n//     userInfoElements.forEach((element) => {\r\n//       element.parentNode.removeChild(element);\r\n//     });\r\n\r\n//     if (data.users) {\r\n//       data.users.forEach((user) => {\r\n//         const userParagraph = document.createElement(\"tr\");\r\n//         userParagraph.id = user._id;\r\n//         userParagraph.className = \"userInfo\";\r\n//         let email =\r\n//           user.emails && user.emails.length > 0\r\n//             ? user.emails[0].address\r\n//             : \"N/A\";\r\n//         let colunas = [\r\n//           `${user.name}`,\r\n//           `${user.username}`,\r\n//           `${email}`,\r\n//           `${user.status}`,\r\n//           `${\"☰\"}`\r\n//         ];\r\n\r\n//         for (let i = 0; i < colunas.length; i++) {\r\n//           let novaCelula = document.createElement(\"td\");\r\n//           if (colunas[i] === \"☰\"){\r\n//             let botao = document.createElement(\"button\");\r\n//                 botao.className = \"button-dept\"\r\n//                 botao.innerHTML = '☰';\r\n//                 botao.onclick = toggleMenu;\r\n//                 novaCelula.appendChild(botao);\r\n//           }else{\r\n//             novaCelula.textContent = colunas[i];\r\n//           }\r\n//           userParagraph.appendChild(novaCelula);\r\n//         }\r\n\r\n        \r\n\r\n//         let tbody = document.querySelector(\"#list table tbody\");\r\n//         tbody.appendChild(userParagraph);\r\n//       });\r\n//     } else {\r\n//       console.warn(\"Nenhum dado de usuário disponível.\");\r\n//     }\r\n//   } catch (error) {\r\n//     console.error(\"Erro ao criar linha de usuário:\", error.message);\r\n//     errorApiMsg();\r\n//   }\r\n// }\r\n\r\n// document.addEventListener('click', function(e){\r\n//   el = e.target\r\n// })\r\n\r\n// //menu drpdown\r\n\r\n// function createDropdown() {\r\n  \r\n// }\r\n\r\n\r\n// const container = document.querySelector(\".container\");\r\n// container.classList.add(\"btn-container\"); // Adiciona a classe ao contêiner\r\n\r\n// container.appendChild(button);\r\n// container.appendChild(agentsDiv);\r\n// button-dept\r\n// // Função principal para manipular o menu\r\n// async function toggleMenu() { \r\n\r\n//   console.log('aqui ok')\r\n//   var trElement = event.target.closest('tr');\r\n//   let agentInfo;\r\n//   let userId\r\n\r\n//   if (trElement) {\r\n//     userId = trElement.id\r\n//   }\r\n\r\n//   var container = document.querySelector('.container1');\r\n//   container.classList.toggle('menu-closed');\r\n//   var offcanvasMenu = document.querySelector('.offcanvas-menu');\r\n//   var overlay = document.querySelector('.overlay');\r\n//   let userData \r\n\r\n//   try {\r\n//     agentInfo = await loadData();\r\n//     agentInfo = agentInfo.users\r\n//     userData = agentInfo.filter(item => item._id === userId);\r\n//       // Faça algo com o retorno da função aqui\r\n//       console.log(\"Retorno de agente:\", userData);\r\n//   } \r\n//   catch (error) {\r\n//       console.error('Erro ao obter dados do departamento:', error.message);\r\n//   }\r\n\r\n  \r\n// // Criar uma tabela\r\n// var table = document.createElement(\"table\");\r\n// var tbody = document.createElement(\"tbody\");\r\n// let row = document.createElement(\"tr\");\r\n// row.className = \"offCanvaInfo\";\r\n\r\n// let name = criaName(userData)\r\n// row.appendChild(name)\r\n\r\n// let username = criaUserName(userData)\r\n// row.appendChild(username)\r\n\r\n// let email = criaEmail(userData)\r\n// row.appendChild(email)\r\n\r\n// let senha = criaSenha()\r\n// row.appendChild(senha)\r\n\r\n// let roles = criaPasswordRequired(username)\r\n// row.appendChild(roles)\r\n\r\n// try {\r\n//   dropdownDiv = await criaInputAgentes(userData);\r\n//   // Faça algo com o retorno da função aqui\r\n//   console.log(\"Retorno da departamentInfo:\", dropdownDiv);\r\n// } catch (error) {\r\n//   console.error('Erro ao obter dados do departamento:', error.message);\r\n// }\r\n\r\n\r\n// document.body.appendChild(dropdownDiv);\r\n// row.appendChild(dropdownDiv)\r\n\r\n// let btnCell = document.createElement(\"td\")\r\n//         btnCell.className = \"btnCell\"\r\n//         let btn = document.createElement(\"button\")\r\n//         btn.textContent = \"Salvar\"\r\n//         let btnRease = document.createElement(\"button\")\r\n//         btnRease.textContent = \"Apagar\"\r\n//         btnRease.className = 'btn-delete'\r\n//         btn.onclick = salvarDados\r\n//         btnCell.appendChild(btnRease)\r\n//         btnCell.appendChild(btn)\r\n\r\n//         row.appendChild(btnCell);\r\n\r\n// tbody.id = userId\r\n\r\n// tbody.appendChild(row);       \r\n// // Adicionar a tabela ao offcanvasMenu\r\n// table.appendChild(tbody);\r\n// document.querySelector('.offcanvas-menu').appendChild(table)\r\n  \r\n//   if (offcanvasMenu.style.right === '0px') {\r\n//       offcanvasMenu.style.right = '-400px';\r\n//       overlay.style.display = 'none';\r\n      \r\n//       // Limpar o conteúdo da tabela ao fechar o menu\r\n//       offcanvasMenu.innerHTML = '';\r\n//   } else {\r\n//       offcanvasMenu.style.right = '0';\r\n//       overlay.style.display = 'block';\r\n\r\n//       // Adiciona um evento de clique ao overlay para fechar o menu ao clicar fora dele\r\n//       overlay.addEventListener('click', closeMenu);\r\n//   }\r\n// }\r\n\r\n// function criaName(userData){\r\n//   var labelCell = document.createElement(\"td\");\r\n//         labelCell.className = \"depInfoCanva\";\r\n//         var inputElement = document.createElement(\"input\");\r\n//         inputElement.id = \"inputName\"\r\n//         inputElement.value = userData[0].name ;\r\n//         labelCell.innerHTML = \"Nome: <br>\";\r\n//         labelCell.appendChild(inputElement)\r\n\r\n//   return labelCell\r\n// }\r\n\r\n// function criaUserName(userData){\r\n//   var labelCell = document.createElement(\"td\");\r\n//         labelCell.className = \"depInfoCanva\";\r\n//         var inputElement = document.createElement(\"input\");\r\n//         inputElement.id = \"inputUsername\"\r\n//         inputElement.value = userData[0].username ;\r\n//         labelCell.innerHTML = \"Usuario: <br>\";\r\n//         labelCell.appendChild(inputElement)\r\n\r\n//   return labelCell\r\n// }\r\n\r\n// function criaEmail(userData){\r\n//   var labelCell = document.createElement(\"td\");\r\n//         labelCell.className = \"depInfoCanva\";\r\n//         var inputElement = document.createElement(\"input\");\r\n//         inputElement.id = \"inpuEmail\"\r\n//         inputElement.value = userData[0].emails[0].address ;\r\n//         labelCell.innerHTML = \"Email: <br>\";\r\n//         labelCell.appendChild(inputElement)\r\n\r\n//   return labelCell\r\n// }\r\n\r\n// function criaSenha(userData){\r\n//   var labelCell = document.createElement(\"td\");\r\n//         labelCell.className = \"depInfoCanva\";\r\n//         var inputElement = document.createElement(\"input\");\r\n//         inputElement.id = \"inputPassword\"\r\n//         inputElement.type = \"password\"\r\n//         labelCell.innerHTML = \"Senha: <br>\";\r\n//         labelCell.appendChild(inputElement)\r\n\r\n//   return labelCell\r\n// }\r\n\r\n// function criaPasswordRequired(userData){\r\n//   var labelCell = document.createElement(\"td\");\r\n//         labelCell.className = \"depInfoCanva\";\r\n//         labelCell.innerHTML = `\r\n//         <div class=\"password-isRequired\">\r\n//         <label>Exigir alteração de senha</label>\r\n//         <div class=\"form-check form-switch\">\r\n//         <input onclick=\"getValue()\" class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheck\" >\r\n//       </div></div>` ;\r\n\r\n//   return labelCell\r\n// }\r\n\r\n// function getValue() {\r\n//     // Seleciona o elemento input pelo ID\r\n//     var checkbox = document.getElementById(\"flexSwitchCheck\");\r\n//     // Verifica se o checkbox está marcado\r\n//     if (checkbox.checked)  {\r\n//       return true\r\n//     }else{\r\n//       return false\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// async function criaInputAgentes(userData) {\r\n//   let userRoles = userData[0].roles\r\n//   let options\r\n//   console.log(userRoles)\r\n\r\n//   let dropdownDiv = document.createElement(\"div\");\r\n//   dropdownDiv.className = \"dropdown\";\r\n\r\n\r\n//   // Criar o elemento input do tipo texto\r\n//   let inputText = document.createElement(\"input\");\r\n//   inputText.type = \"text\";\r\n//   inputText.id = \"searchInput\";\r\n//   inputText.setAttribute(\"placeholder\", \"Search...\");\r\n//   inputText.onclick = toggleDropdown; // Adicionar o evento onclick\r\n//   inputText.oninput = filterDropdown; // Adicionar o evento oninput\r\n\r\n//   // Criar o elemento button\r\n//   let button = document.createElement(\"button\");\r\n//   button.className = \"dropbtn\";\r\n//   button.textContent = \"Selecione\";\r\n\r\n//   // Criar o elemento div com a classe \"dropdown-content\"\r\n//   let dropdownContentDiv = document.createElement(\"div\");\r\n//   dropdownContentDiv.id = \"myDropdown\";\r\n//   dropdownContentDiv.className = \"dropdown-content\";\r\n\r\n//   // Adicionar os elementos das opções dentro do div \"dropdown-content\"\r\n//   try {\r\n//     options = await rolesList();\r\n//     console.log(\"Retorno das roles:\", options);\r\n//   } \r\n//   catch (error) {\r\n//       console.error('Erro ao obter dados das roles:', error.message);\r\n//   }\r\n//   // let options = [\"user\", \"admin\", \"Moderador\", \"livechat-agent\", \"Livechat-manager\", \"Livechat-monitor\", \"bot\", \"app\"];\r\n  \r\n\r\n//       options.forEach(function (option) {\r\n//           let i = 0\r\n//           let label = document.createElement(\"label\");\r\n//           let checkbox = document.createElement(\"input\");\r\n//           checkbox.type = \"checkbox\";\r\n//           checkbox.value = option;\r\n\r\n//           let encontrado = false;\r\n//           for (let i = 0; i < userRoles.length; i++) {\r\n//             if (userRoles[i] === option) {\r\n//               encontrado = true;\r\n//               break;\r\n//             }\r\n//            }\r\n//            checkbox.checked = encontrado;\r\n\r\n\r\n//           label.appendChild(checkbox);\r\n//           label.appendChild(document.createTextNode(\" \" + option));\r\n//           dropdownContentDiv.appendChild(label);\r\n//           i += 1\r\n//       });\r\n\r\n//   dropdownDiv.appendChild(inputText);\r\n//   dropdownDiv.appendChild(dropdownContentDiv);\r\n\r\n//   let divLine = document.createElement(\"td\");\r\n//   divLine.className = \"depInfoCanva\";\r\n//   divLine.innerHTML = \"Roles: <br>\";\r\n//   divLine.appendChild(dropdownDiv);\r\n\r\n//   return divLine;\r\n// }\r\n\r\n\r\n// function salvarDados(){\r\n\r\n//   var name = document.getElementById(\"inputName\").value;\r\n//   var email = document.getElementById(\"inpuEmail\").value;\r\n//   var username = document.getElementById(\"inputUsername\").value;\r\n//   var password = document.getElementById(\"inputPassword\").value;\r\n//   let roles = saveDataWhenDropdownClosed();\r\n//   console.log(\"roles\",roles)\r\n//   let passwordRequired = getValue()\r\n\r\n//   var tbodies = document.getElementsByTagName(\"tbody\");\r\n\r\n//     for (var i = 0; i < tbodies.length; i++) {\r\n//         var id = tbodies[i].id;\r\n//     }\r\n\r\n//     let dataUserUpdate = {\"userId\": id, \r\n//               \"data\": {\r\n//               \"roles\": roles,\r\n//               \"name\": name,\r\n//               \"password\": password,\r\n//               \"username\": username,\r\n//               \"email\": email,\r\n//               \"requirePasswordChange\": passwordRequired\r\n//               }\r\n//       }\r\n\r\n  \r\n//   console.log(dataUserUpdate);\r\n//   udapetUser(dataUserUpdate)\r\n// }\r\n\r\n\r\n\r\n// async function udapetUser(dataUserUpdate) {\r\n//   try {\r\n//     const siteSelected = document.getElementById(\"statusFilter\").value;\r\n//     const apiUrl = `http://localhost:3000/api/updateUser?site=${encodeURIComponent(siteSelected)}`;\r\n  \r\n//     const headers = {\r\n//         'Content-Type': 'application/json',\r\n//         'X-Status-Filter': siteSelected\r\n//     };\r\n  \r\n//     const objetoJSON = JSON.stringify(dataUserUpdate); // Serializando o objeto para JSON\r\n\r\n//     const response = await fetch(apiUrl, {\r\n//       method: \"POST\",\r\n//       headers: headers,\r\n//       body: objetoJSON // Enviando o objeto serializado no corpo da requisição\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       throw new Error(`Erro na solicitação: ${response.status}`);\r\n//     }\r\n\r\n//     const responseData = await response.json(); // Aguardando a resposta do backend\r\n//     console.log(\"Resposta do backend:\", responseData);\r\n//     sucessApiMsg()\r\n//     loadData()\r\n//     closeMenu()\r\n//   } catch (error) {\r\n//     console.error(\"Erro ao enviar objeto para o backend:\", error.message);\r\n//   }\r\n// }\r\n"],"names":["teste","console","log","loadData"],"sourceRoot":""}